apply plugin: "groovy"
apply plugin: "spring-boot"
apply plugin: "application"

sourceCompatibility = "1.6"
targetCompatibility = "1.6"

version = "${version}"
group = "${group}"
mainClassName = "sample.SampleApplication"

buildscript {
    repositories {
    	mavenLocal()
        maven { url "http://repo.springsource.org/libs-snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.0.RC3")
    }
}

ext {
	springBootVersion = '1.0.0.RC3'
}

jar {
    baseName = 'bootsample'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "http://repo.springsource.org/libs-snapshot" }
}

dependencies {
    compile "org.codehaus.groovy:groovy:2.1.6"
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    //elastic search
    compile('org.springframework.data:spring-data-elasticsearch:1.0.0.M1')
    
    testCompile("junit:junit:4.11")
}

task copyToLib << {
    copy {
        from configurations.runtime.copy().setTransitive(false)
        into "$buildDir/libs"
        rename { name ->
            def artifacts = configurations.runtime.resolvedConfiguration.resolvedArtifacts
            def artifact = artifacts.find { it.file.name == name }
            "${artifact.name}.${artifact.extension}"
        }
    }
}

run.dependsOn build

build.mustRunAfter clean

task stage(dependsOn: ['clean', 'build', 'copyToLib'])

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}
